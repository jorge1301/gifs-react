{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGridItems.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","className","onSubmit","evt","preventDefault","cat","type","placeholder","value","onChange","target","obtenerGifs","busqueda","a","urlImagen","fetch","response","json","data","imagenes","map","images","title","id","url","downsized_medium","GifGridItems","loading","src","alt","GifGrid","category","state","setstate","useEffect","then","gifs","useFetchGifs","image","GifExpertApp","categorias","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAS9C,OACI,mCACI,0BAASC,UAAU,SAAnB,UACI,8CACA,sBAAMC,SAVG,SAAAC,GACjBA,EAAIC,iBACJP,GAAc,SAAAQ,GAAG,OAAKN,GAAL,mBAAmBM,OACpCL,EAAc,KAOwBC,UAAU,WAAxC,SACI,uBAAOK,KAAK,OAAOC,YAAY,8BAA8BC,MAAOT,EAAYU,SAZtE,SAAAN,GAAG,OAAIH,EAAcG,EAAIO,OAAOF,kB,+BCW/CG,EAbE,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACVC,EADU,UAHR,2CAGQ,OACWF,EADX,oBAFL,mCAEK,sBAEOG,MAAMD,GAFb,cAEVE,EAFU,gBAGOA,EAASC,OAHhB,uBAGRC,EAHQ,EAGRA,KACFC,EAAWD,EAAKE,KAAI,YAA4B,IAAzBC,EAAwB,EAAxBA,OAEzB,MAAO,CAAEC,MAFwC,EAAhBA,MAEjBC,GAFiC,EAATA,GAEpBC,IADJH,EAAOI,iBAAfD,QALI,kBASTL,GATS,4CAAH,sDCDJO,EAAe,SAAC,GAAoB,IAAlBJ,EAAiB,EAAjBA,MAAOE,EAAU,EAAVA,IAClC,OACI,sBAAKvB,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAa0B,QAAQ,OAAOC,IAAKJ,EAAKK,IAAKP,IAC1D,6BAAKA,QCFJQ,EAAU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACZjC,mBAAS,CAC/BoB,KAAM,GACNS,SAAS,IAHyB,mBAC/BK,EAD+B,KACxBC,EADwB,KAetC,OARAC,qBAAU,WACNvB,EAAYoB,GAAUI,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACxCf,KAAMkB,EACNT,SAAS,SAEd,CAACI,IAGGC,EDbyBK,CAAaN,GAA/BK,EADuB,EAC7BlB,KAAYS,EADiB,EACjBA,QACpB,OACI,qCACI,oBAAI1B,UAAU,mCAAd,SAAkD0B,GAAW,mBAAG1B,UAAU,SAAb,wBAC7D,oBAAIA,UAAU,SAAd,SAAwB8B,IACxB,qBAAK9B,UAAU,kDAAf,SAEQmC,EAAKhB,KAAI,SAACkB,GAAD,OACL,cAAC,EAAD,eAAiCA,GAAdA,EAAMf,aEWlCgB,EApBM,WAAO,IAAD,EACazC,mBAAS,CAAC,cADvB,mBAChB0C,EADgB,KACJ3C,EADI,KAGvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ2C,EAAWpB,KAAI,SAACW,GAAD,OACX,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCXtCU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c25a9016.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport ProtoTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategorias }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = evt => setInputValue(evt.target.value);\r\n    const handleSubmit = evt => {\r\n        evt.preventDefault();\r\n        setCategorias(cat => [inputValue,...cat]);\r\n        setInputValue('');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <section className='titulo'>\r\n                <h2>Add Category</h2>\r\n                <form onSubmit={handleSubmit} className='buscador'>\r\n                    <input type=\"text\" placeholder='Ingrese una nueva categoria' value={inputValue} onChange={handleInputChange} />\r\n                </form>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: ProtoTypes.func.isRequired\r\n}\r\n","const url = 'https://api.giphy.com/v1/gifs/search?q=';\r\nconst apiKey = 'aP9KC4N0FZ1oFQC7fdzm6IX5nIrBA7XN';\r\n\r\nconst obtenerGifs = async (busqueda) => {\r\n    const urlImagen = `${url}${busqueda}&api_key=${apiKey}&limit=10`;\r\n    const response = await fetch(urlImagen);\r\n    const { data } = await response.json();\r\n    const imagenes = data.map(({ images, title, id }) => {\r\n        const { url } = images.downsized_medium;\r\n        return { title, id, url }\r\n    });\r\n\r\n    return imagenes;\r\n}\r\n\r\n\r\nexport default obtenerGifs","import React from 'react'\r\n\r\nexport const GifGridItems = ({ title, url }) => {\r\n    return (\r\n        <div className='card'>\r\n            <img className='imagen-gif' loading='lazy' src={url} alt={title} />\r\n            <h4>{title}</h4>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItems } from './GifGridItems';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    const { data: gifs, loading } = useFetchGifs(category);\r\n    return (\r\n        <>\r\n            <h4 className='animate__animated animate__flash'>{loading && <p className='titulo'>Cargando</p>}</h4>\r\n            <h3 className='titulo'>{category}</h3>\r\n            <div className='containerFlex animate__animated animate__fadeIn'>\r\n                {\r\n                    gifs.map((image) =>\r\n                        <GifGridItems key={image.id} {...image} />\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport obtenerGifs from \"../helpers/getGif\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        obtenerGifs(category).then(gifs => setstate({\r\n            data: gifs,\r\n            loading: false\r\n        }));\r\n    }, [category]);\r\n\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    const [categorias, setCategorias] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias={setCategorias} />\r\n            <hr />\r\n\r\n            <ul>\r\n                {\r\n                    categorias.map((category) =>\r\n                        <GifGrid key={category} category={category} />\r\n                    )\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}